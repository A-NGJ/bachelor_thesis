<?xml version="1.0"?>

<launch>

  <env name="ROSCONSOLE_CONFIG_FILE" value="$(find vrx_gazebo)/config/custom_rosconsole.conf"/>

  <arg name="namespace" default="wamv"/>
  <arg name="wamv_locked" default="false" />

  <!-- For setting debug level to debug -->
  <!--<env name="ROSCONSOLE_CONFIG_FILE"
       value="$(find kingfisher_gazebo)/config/custom_rosconsole.conf"/>
   -->
  <!-- Command line arguments -->

  <arg name="world" default="$(find vrx_gazebo)/worlds/main2.world" />

  <arg name="microstrain" default="false" />

  <!-- Initial USV location and attitude-->
  <arg name="x" default="88" />
  <arg name="y" default="80" />
  <arg name="z" default="0.3" />
  <arg name="P" default="0" />
  <arg name="R" default="0" />
  <arg name="Y" default="-2.8" />

  <arg name="thrust_config" default="T" />
  <arg name="vrx_sensors_enabled" default="true" />

  <arg name="h_config" value="$(eval int((thrust_config)=='H'))"/>
  <arg name="t_config" value="$(eval int((thrust_config)=='T'))"/>
  <arg name="x_config" value="$(eval int((thrust_config)=='X'))"/>


  <!-- Load robot model -->
  <arg if="$(arg t_config)" name="urdf" default="$(find wamv_gazebo)/urdf/wamv_gazebo.urdf.xacro"/>
  <!--<arg name="urdf" default="$(find nps_robotx)/urdf/nps_wamv.xacro"/> -->
  <param name="$(arg namespace)/robot_description"
         command="$(find xacro)/xacro &#x002D;&#x002D;inorder '$(arg urdf)'
         locked:=$(arg wamv_locked)		   
         thruster_config:=$(arg thrust_config)
         vrx_sensors_enabled:=$(arg vrx_sensors_enabled)
         namespace:=$(arg namespace) "/>

  <!-- Spawn model in Gazebo -->
  <node name="spawn_model" pkg="gazebo_ros" type="spawn_model"
        args="-x $(arg x) -y $(arg y) -z $(arg z)
              -R $(arg R) -P $(arg P) -Y $(arg Y)
              -urdf -param $(arg namespace)/robot_description -model wamv"/>

  <!--<include file="$(find robotx_gazebo)/launch/usv_diffdrive.launch"/>-->

  <!-- Utility for publishing rpy for plotting -->
  <node pkg="vrx_gazebo" type="quat2rpy.py" name="quat2rpy" output="screen">
      <remap from="in_topic" to="/gazebo/model_states" />
      <remap from="out_topic" to="wamv_rpy" />
      <param name="input_msg_type" value="ModelStates" />
      <param name="modelstates_index" value="6" type="int" />
  </node>

  <!-- Launch the odometry Publication-->
  <include file="$(find wamv_description)/launch/start_base_odom_publisher.launch"/>

</launch>
